---
- name: Install Rancher on K3s Cluster
  hosts: server[0]  # Run on the first server node (k3s-server-1)
  become: yes
  vars:
    rancher_namespace: cattle-system
    kubectl_path: /usr/local/bin/kubectl
    helm_path: /usr/local/bin/helm
  
  tasks:
    - name: Wait for K3s to be ready
      ansible.builtin.wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 300

    - name: Check if kubectl is available
      ansible.builtin.stat:
        path: "{{ kubectl_path }}"
      register: kubectl_stat

    - name: Use K3s kubectl if system kubectl not found
      ansible.builtin.set_fact:
        kubectl_path: /usr/local/bin/k3s kubectl
      when: not kubectl_stat.stat.exists

    - name: Wait for all nodes to be ready
      ansible.builtin.shell: |
        {{ kubectl_path }} get nodes --no-headers | grep -v Ready || true
      register: nodes_not_ready
      until: nodes_not_ready.stdout == ""
      retries: 30
      delay: 10
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Download and install Helm
      ansible.builtin.get_url:
        url: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
        dest: /tmp/helm.tar.gz
        mode: '0644'

    - name: Extract Helm
      ansible.builtin.unarchive:
        src: /tmp/helm.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Install Helm binary
      ansible.builtin.copy:
        src: /tmp/linux-amd64/helm
        dest: "{{ helm_path }}"
        mode: '0755'
        remote_src: yes

    - name: Add Jetstack Helm repository for cert-manager
      ansible.builtin.shell: |
        {{ helm_path }} repo add jetstack https://charts.jetstack.io
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Add Rancher Helm repository
      ansible.builtin.shell: |
        {{ helm_path }} repo add rancher-stable https://releases.rancher.com/server-charts/stable
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Update Helm repositories
      ansible.builtin.shell: |
        {{ helm_path }} repo update
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Create cert-manager namespace
      ansible.builtin.shell: |
        {{ kubectl_path }} create namespace cert-manager --dry-run=client -o yaml | {{ kubectl_path }} apply -f -
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install cert-manager CRDs
      ansible.builtin.shell: |
        {{ kubectl_path }} apply -f https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.crds.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install cert-manager
      ansible.builtin.shell: |
        {{ helm_path }} upgrade --install cert-manager jetstack/cert-manager \
          --namespace cert-manager \
          --version {{ cert_manager_version }} \
          --wait \
          --timeout=10m
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Wait for cert-manager to be ready
      ansible.builtin.shell: |
        {{ kubectl_path }} wait --for=condition=ready pod -l app.kubernetes.io/instance=cert-manager -n cert-manager --timeout=300s
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Create Rancher namespace
      ansible.builtin.shell: |
        {{ kubectl_path }} create namespace {{ rancher_namespace }} --dry-run=client -o yaml | {{ kubectl_path }} apply -f -
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Rancher
      ansible.builtin.shell: |
        {{ helm_path }} upgrade --install rancher rancher-stable/rancher \
          --namespace {{ rancher_namespace }} \
          --version {{ rancher_chart_version }} \
          --set hostname={{ rancher_hostname }} \
          --set bootstrapPassword={{ rancher_bootstrap_password }} \
          --set ingress.tls.source=letsEncrypt \
          --set letsEncrypt.email=admin@{{ rancher_hostname.split('.')[1:] | join('.') }} \
          --set letsEncrypt.ingress.class=traefik \
          --wait \
          --timeout=10m
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Wait for Rancher deployment to be ready
      ansible.builtin.shell: |
        {{ kubectl_path }} wait --for=condition=available deployment/rancher -n {{ rancher_namespace }} --timeout=600s
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Get Rancher service details
      ansible.builtin.shell: |
        {{ kubectl_path }} get svc -n {{ rancher_namespace }}
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: rancher_services

    - name: Display Rancher installation summary
      ansible.builtin.debug:
        msg: |
          Rancher has been successfully installed!
          
          Access Details:
          - URL: https://{{ rancher_hostname }}
          - Bootstrap Password: {{ rancher_bootstrap_password }}
          - Namespace: {{ rancher_namespace }}
          
          Services:
          {{ rancher_services.stdout }}
          
          Note: 
          1. Make sure {{ rancher_hostname }} points to one of your K3s nodes
          2. The first login will require you to set a new admin password
          3. Rancher will be available once the Let's Encrypt certificate is issued

    - name: Show pods status
      ansible.builtin.shell: |
        {{ kubectl_path }} get pods -n {{ rancher_namespace }}
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: rancher_pods

    - name: Display Rancher pods status
      ansible.builtin.debug:
        msg: |
          Rancher Pods Status:
          {{ rancher_pods.stdout }}
